graph TD
    %% Actual Collision System Implementation
    
    subgraph "Game Loop Call"
        A[Level::update] --> B[Level::detectAndResolveCollisions]
        C[Game::predictLocalPlayerMovement] --> D[CollisionManager::detectPlayerCollisions]
    end
    
    subgraph "Collision Detection Setup"
        B --> E[CollisionManager::detectCollisions]
        E --> F[Create SpatialGrid with 200px cells]
        F --> G[Add all collidable objects to grid]
        G --> H[Separate dynamic objects - non-tiles only]
    end
    
    subgraph "Broad Phase Detection"
        H --> I[For each dynamic object]
        I --> J[SpatialGrid::getPotentialColliders]
        J --> K[Skip tile-vs-tile collisions]
        K --> L[Distance check - skip if > 200px apart]
    end
    
    subgraph "Narrow Phase - AABB Detection"
        L --> M[CollisionManager::checkAndResolveCollision]
        M --> N[Get BoxCollider positions and sizes]
        N --> O[Calculate AABB intersection]
        O --> P{Objects intersect?}
        P -->|No| Q[Continue to next object]
        P -->|Yes| R[Calculate CollisionInfo]
    end
    
    subgraph "Collision Resolution"
        R --> S[Calculate penetration vector]
        S --> T[Find minimal displacement - X or Y axis]
        T --> U[Calculate contact point]
        U --> V[CollisionManager::resolveCollision]
    end
    
    subgraph "Visitor Pattern Implementation"
        V --> W[Create CollisionHandler for objA]
        W --> X[objB->accept CollisionHandler A]
        X --> Y[Create CollisionHandler for objB with reversed penetration]
        Y --> Z[objA->accept CollisionHandler B]
    end
    
    subgraph "Object Type Resolution"
        Z --> AA[CollisionHandler::visit method called]
        AA --> BB{Object type?}
        BB -->|Player| CC[CollisionHandler::visit Player]
        BB -->|Enemy| DD[CollisionHandler::visit Enemy] 
        BB -->|Tile| EE[CollisionHandler::visit Tile]
    end
    
    subgraph "Interaction Handling"
        CC --> FF[CollisionHandler::handleInteraction Player]
        DD --> GG[CollisionHandler::handleInteraction Enemy]
        EE --> HH[CollisionHandler::handleInteraction Tile]
        
        FF --> II{Initiator type?}
        II -->|TILE| JJ[Check Tile flags - BLOCKS_VERTICAL/HORIZONTAL]
        II -->|MINOTAUR| KK[Enemy damage to player - commented out]
        
        GG --> LL{Initiator type?}
        LL -->|TILE| MM[Apply position correction based on flags]
        LL -->|PLAYER| NN[Player hit enemy]
        LL -->|MINOTAUR| OO[Enemy-vs-enemy collision - position/velocity correction]
    end
    
    subgraph "Position Correction"
        JJ --> PP[Subtract penetration from position]
        MM --> PP
        OO --> QQ[Set velocity to 0 and correct position]
        PP --> RR[Update object collider]
        QQ --> RR
    end
    
    %% Styling
    classDef gameLoop fill:#e1f5fe
    classDef detection fill:#f3e5f5
    classDef resolution fill:#e8f5e8
    classDef visitor fill:#fff3e0
    
    class A,B,C,D gameLoop
    class E,F,G,H,I,J,K,L,M,N,O,P,Q detection
    class R,S,T,U,V,W,X,Y,Z resolution
    class AA,BB,CC,DD,EE,FF,GG,HH,II,JJ,KK,LL,MM,NN,OO,PP,QQ,RR visitor
